pipeline:
  name: redit_app_CI
  identifier: redit_app_CI
  projectIdentifier: DemoTx
  orgIdentifier: default
  tags: {}
  properties:
    ci:
      codebase:
        connectorRef: account.Github_OAuth_1702454216196
        repoName: ipreetgs/reddit-clone-k8s
        build: <+input>
  stages:
    - stage:
        name: Build and Scan
        identifier: Build_and_Scan
        description: ""
        type: CI
        spec:
          cloneCodebase: true
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Docker
            spec: {}
          sharedPaths:
            - /harness/data
          caching:
            enabled: false
            paths: []
          buildIntelligence:
            enabled: false
          execution:
            steps:
              - step:
                  type: Run
                  name: Pre_build
                  identifier: Pre_build
                  spec:
                    shell: Sh
                    command: echo "Pipeline is working"
                  description: checking the connection
              - step:
                  type: Run
                  name: Run_2
                  identifier: Run_2
                  spec:
                    shell: Sh
                    command: |-
                      #!/bin/bash
                      # Usage: ./fetch_pr_metadata.sh <github_owner> <repo_name> [<github_token>]

                      if [ $# -lt 2 ]; then
                        echo "Usage: $0 <github_owner> <repo_name> [<github_token>]"
                        exit 1
                      fi

                      OWNER="$1"
                      REPO="$2"
                      TOKEN="${3:-}"

                      # Step 1: Extract merged PR commit messages.
                      echo "Extracting merged PR commit messages from git history..."
                      MERGED_COMMITS=$(git log --merges --pretty=format:"%s")

                      # Step 2: Extract unique PR numbers from the commit messages.
                      # Assumes commit messages follow the pattern "Merge pull request #<number>"
                      PR_NUMBERS=$(echo "$MERGED_COMMITS" | grep -oE '#[0-9]+' | tr -d '#' | sort -u)

                      if [ -z "$PR_NUMBERS" ]; then
                        echo "No PR numbers found in merge commit messages."
                        exit 0
                      fi

                      NUM_PR=$(echo "$PR_NUMBERS" | wc -w)
                      echo "Total merged PRs found: $NUM_PR"
                      echo

                      # Step 3: For each PR number, fetch details from the GitHub API.
                      for pr in $PR_NUMBERS; do
                        echo "Fetching details for PR #$pr..."
                        API_URL="https://api.github.com/repos/${OWNER}/${REPO}/pulls/${pr}"
                        
                        if [ -n "$TOKEN" ]; then
                          RESPONSE=$(curl -s -H "Authorization: token $TOKEN" "$API_URL")
                        else
                          RESPONSE=$(curl -s "$API_URL")
                        fi
                        
                        # Using jq to extract metadata.
                        TITLE=$(echo "$RESPONSE" | jq -r '.title')
                        CREATED_BY=$(echo "$RESPONSE" | jq -r '.user.login')
                        MERGED_BY=$(echo "$RESPONSE" | jq -r '.merged_by.login')
                        CREATED_AT=$(echo "$RESPONSE" | jq -r '.created_at')
                        MERGED_AT=$(echo "$RESPONSE" | jq -r '.merged_at')
                        MERGE_SHA=$(echo "$RESPONSE" | jq -r '.merge_commit_sha')
                        
                        echo "PR #$pr:"
                        echo "  Title           : $TITLE"
                        echo "  Created By      : $CREATED_BY"
                        echo "  Merged By       : $MERGED_BY"
                        echo "  Created At      : $CREATED_AT"
                        echo "  Merged At       : $MERGED_AT"
                        echo "  Merge Commit SHA: $MERGE_SHA"
                        echo
                      done
        delegateSelectors:
          - gcp-delegate-p
  notificationRules:
    - name: notify
      identifier: notify
      pipelineEvents:
        - type: AllEvents
      notificationMethod:
        type: Webhook
        spec:
          webhookUrl: https://app.harness.io/gateway/ng/api/webhook?accountIdentifier=Oz0uv9cjTYWx7zK2aogXCQ
      enabled: true
